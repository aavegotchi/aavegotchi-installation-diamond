/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../DiamondCutFacet";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061125f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004361003e366004610d8f565b610045565b005b61004d61027b565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e547fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c9061ffff8116908190600090600716156100bc5750600381901c60009081526001840160205260409020545b60005b888110156101b35761019c83838c8c858181106100de576100de610e41565b90506020028101906100f09190610e57565b6100fe906020810190610e77565b8d8d8681811061011057610110610e41565b90506020028101906101229190610e57565b610133906040810190602001610ea8565b8e8e8781811061014557610145610e41565b90506020028101906101579190610e57565b610165906040810190610ec3565b8080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061030992505050565b9093509150806101ab81610f23565b9150506100bf565b508282146101cf5760028401805461ffff191661ffff84161790555b60078216156101f157600382901c600090815260018501602052604090208190555b7f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb6738989898989604051610228959493929190610fcd565b60405180910390a16102708787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610af692505050565b505050505050505050565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c600401546001600160a01b031633146103075760405162461bcd60e51b815260206004820152602260248201527f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60448201526132b960f11b60648201526084015b60405180910390fd5b565b600080807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c905060008451116103955760405162461bcd60e51b815260206004820152602b60248201527f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660448201526a1858d95d081d1bc818dd5d60aa1b60648201526084016102fe565b60008560028111156103a9576103a9610f3e565b1415610517576103d1866040518060600160405280602481526020016111b660249139610d09565b60005b84518110156105115760008582815181106103f1576103f1610e41565b6020908102919091018101516001600160e01b03198116600090815291859052604090912054909150606081901c1561048a5760405162461bcd60e51b815260206004820152603560248201527f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f6044820152746e207468617420616c72656164792065786973747360581b60648201526084016102fe565b6001600160e01b031980831660008181526020879052604090206001600160601b031960608d901b168e17905560e060058e901b811692831c199c909c1690821c179a8114156104ee5760038c901c600090815260018601602052604081209b909b555b8b6104f881610f23565b9c5050505050808061050990610f23565b9150506103d4565b50610aea565b600185600281111561052b5761052b610f3e565b141561075d576105538660405180606001604052806028815260200161120260289139610d09565b60005b845181101561051157600085828151811061057357610573610e41565b6020908102919091018101516001600160e01b03198116600090815291859052604090912054909150606081901c308114156106095760405162461bcd60e51b815260206004820152602f60248201527f4c69624469616d6f6e644375743a2043616e2774207265706c61636520696d6d60448201526e3aba30b1363290333ab731ba34b7b760891b60648201526084016102fe565b896001600160a01b0316816001600160a01b031614156106915760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e20776974682073616d652066756e6374696f6e000000000000000060648201526084016102fe565b6001600160a01b03811661070d5760405162461bcd60e51b815260206004820152603860248201527f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60448201527f6374696f6e207468617420646f65736e2774206578697374000000000000000060648201526084016102fe565b506001600160e01b031990911660009081526020849052604090206bffffffffffffffffffffffff919091166001600160601b031960608a901b161790558061075581610f23565b915050610556565b600285600281111561077157610771610f3e565b1415610a92576001600160a01b038616156107ed5760405162461bcd60e51b815260206004820152603660248201527f4c69624469616d6f6e644375743a2052656d6f76652066616365742061646472604482015275657373206d757374206265206164647265737328302960501b60648201526084016102fe565b600388901c6007891660005b8651811015610a7257896108315782610811816110f6565b60008181526001870160205260409020549b5093506007925061083f9050565b8161083b816110f6565b9250505b6000806000808a858151811061085757610857610e41565b6020908102919091018101516001600160e01b031981166000908152918a9052604090912054909150606081901c6108f75760405162461bcd60e51b815260206004820152603760248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360448201527f74696f6e207468617420646f65736e277420657869737400000000000000000060648201526084016102fe565b606081901c3014156109625760405162461bcd60e51b815260206004820152602e60248201527f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560448201526d3a30b1363290333ab731ba34b7b760911b60648201526084016102fe565b600587901b8f901b94506001600160e01b0319808616908316146109b8576001600160e01b03198516600090815260208a90526040902080546001600160601b0319166bffffffffffffffffffffffff83161790555b6001600160e01b031991909116600090815260208990526040812055600381901c611fff16925060051b60e0169050858214610a1d576000828152600188016020526040902080546001600160e01b031980841c19909116908516831c179055610a41565b80836001600160e01b031916901c816001600160e01b031960001b901c198e16179c505b84610a5c57600086815260018801602052604081208190559c505b5050508080610a6a90610f23565b9150506107f9565b5080610a7f83600861110d565b610a89919061112c565b99505050610aea565b60405162461bcd60e51b815260206004820152602760248201527f4c69624469616d6f6e644375743a20496e636f727265637420466163657443756044820152663a20b1ba34b7b760c91b60648201526084016102fe565b50959694955050505050565b6001600160a01b038216610b7d57805115610b795760405162461bcd60e51b815260206004820152603c60248201527f4c69624469616d6f6e644375743a205f696e697420697320616464726573732860448201527f3029206275745f63616c6c64617461206973206e6f7420656d7074790000000060648201526084016102fe565b5050565b6000815111610bf45760405162461bcd60e51b815260206004820152603d60248201527f4c69624469616d6f6e644375743a205f63616c6c6461746120697320656d707460448201527f7920627574205f696e6974206973206e6f74206164647265737328302900000060648201526084016102fe565b6001600160a01b0382163014610c2657610c26826040518060600160405280602881526020016111da60289139610d09565b600080836001600160a01b031683604051610c419190611170565b600060405180830381855af49150503d8060008114610c7c576040519150601f19603f3d011682016040523d82523d6000602084013e610c81565b606091505b509150915081610d0357805115610cac578060405162461bcd60e51b81526004016102fe9190611182565b60405162461bcd60e51b815260206004820152602660248201527f4c69624469616d6f6e644375743a205f696e69742066756e6374696f6e2072656044820152651d995c9d195960d21b60648201526084016102fe565b50505050565b813b8181610d035760405162461bcd60e51b81526004016102fe9190611182565b80356001600160a01b0381168114610d4157600080fd5b919050565b60008083601f840112610d5857600080fd5b50813567ffffffffffffffff811115610d7057600080fd5b602083019150836020828501011115610d8857600080fd5b9250929050565b600080600080600060608688031215610da757600080fd5b853567ffffffffffffffff80821115610dbf57600080fd5b818801915088601f830112610dd357600080fd5b813581811115610de257600080fd5b8960208260051b8501011115610df757600080fd5b60208301975080965050610e0d60208901610d2a565b94506040880135915080821115610e2357600080fd5b50610e3088828901610d46565b969995985093965092949392505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e19833603018112610e6d57600080fd5b9190910192915050565b600060208284031215610e8957600080fd5b610e9282610d2a565b9392505050565b803560038110610d4157600080fd5b600060208284031215610eba57600080fd5b610e9282610e99565b6000808335601e19843603018112610eda57600080fd5b83018035915067ffffffffffffffff821115610ef557600080fd5b6020019150600581901b3603821315610d8857600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f3757610f37610f0d565b5060010190565b634e487b7160e01b600052602160045260246000fd5b818352600060208085019450826000805b86811015610f985782356001600160e01b03198116808214610f85578384fd5b8952509683019691830191600101610f65565b50959695505050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6060808252818101869052600090600560808085019089831b8601018a855b8b8110156110c357878303607f190184528135368e9003605e1901811261101257600080fd5b8d016001600160a01b0361102582610d2a565b1684526020611035818301610e99565b6003811061105357634e487b7160e01b600052602160045260246000fd5b8582015260408281013536849003601e1901811261107057600080fd5b8301803567ffffffffffffffff81111561108957600080fd5b808a1b360385131561109a57600080fd5b8a838901526110ae8b890182868501610f54565b98840198975050509301925050600101610fec565b50506001600160a01b038916602087015285810360408701526110e781888a610fa4565b9b9a5050505050505050505050565b60008161110557611105610f0d565b506000190190565b600081600019048311821515161561112757611127610f0d565b500290565b6000821982111561113f5761113f610f0d565b500190565b60005b8381101561115f578181015183820152602001611147565b83811115610d035750506000910152565b60008251610e6d818460208701611144565b60208152600082518060208401526111a1816040850160208701611144565b601f01601f1916919091016040019291505056fe4c69624469616d6f6e644375743a2041646420666163657420686173206e6f20636f64654c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a205265706c61636520666163657420686173206e6f20636f6465a2646970667358221220a433cb991bbafc0a008d9fd2ada0545d6a326087ada5061751e7310f9e7a347c64736f6c63430008090033";

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
