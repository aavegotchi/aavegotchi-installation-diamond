/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  DiamondLoupeFacet,
  DiamondLoupeFacetInterface,
} from "../DiamondLoupeFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_functionSelector",
        type: "bytes4",
      },
    ],
    name: "facetAddress",
    outputs: [
      {
        internalType: "address",
        name: "facetAddress_",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facetAddresses",
    outputs: [
      {
        internalType: "address[]",
        name: "facetAddresses_",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_facet",
        type: "address",
      },
    ],
    name: "facetFunctionSelectors",
    outputs: [
      {
        internalType: "bytes4[]",
        name: "_facetFunctionSelectors",
        type: "bytes4[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "facets",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondLoupe.Facet[]",
        name: "facets_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "_interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b3d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806301ffc9a71461005c57806352ef6b2c146100bd5780637a0ed627146100d2578063adfca15e146100e7578063cdffacc614610107575b600080fd5b6100a861006a3660046108ee565b6001600160e01b03191660009081527fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131f602052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100c5610159565b6040516100b4919061091f565b6100da610325565b6040516100b491906109b1565b6100fa6100f5366004610a2e565b610776565b6040516100b49190610a57565b6101416101153660046108ee565b6001600160e01b0319166000908152600080516020610ae8833981519152602052604090205460601c90565b6040516001600160a01b0390911681526020016100b4565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610ae88339815191529061ffff1667ffffffffffffffff8111156101aa576101aa610a6a565b6040519080825280602002602001820160405280156101d3578160200160208202803683370190505b50915060008060005b600284015461ffff1682101561031d576000818152600185016020526040812054905b6008811015610308578361021281610a96565b600288015490955061ffff16851115905061022c57610308565b600581901b82901b6001600160e01b0319811660009081526020889052604081205460601c90805b888110156102aa578a818151811061026e5761026e610ab1565b60200260200101516001600160a01b0316836001600160a01b0316141561029857600191506102aa565b806102a281610a96565b915050610254565b5080156102ba57506102f6915050565b818a89815181106102cd576102cd610ab1565b6001600160a01b0390921660209283029190910190910152876102ef81610a96565b9850505050505b8061030081610a96565b9150506101ff565b5050808061031590610a96565b9150506101dc565b505082525090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610ae88339815191529061ffff1667ffffffffffffffff81111561037657610376610a6a565b6040519080825280602002602001820160405280156103bc57816020015b6040805180820190915260008152606060208201528152602001906001900390816103945790505b50600282015490925060009061ffff1667ffffffffffffffff8111156103e4576103e4610a6a565b60405190808252806020026020018201604052801561040d578160200160208202803683370190505b50905060008060005b600285015461ffff16821015610704576000818152600186016020526040812054905b60088110156106ef578361044c81610a96565b600289015490955061ffff168511159050610466576106ef565b600581901b82901b6001600160e01b0319811660009081526020899052604081205460601c90805b888110156105ac57826001600160a01b03168c82815181106104b2576104b2610ab1565b6020026020010151600001516001600160a01b0316141561059a57838c82815181106104e0576104e0610ab1565b6020026020010151602001518b83815181106104fe576104fe610ab1565b602002602001015160ff168151811061051957610519610ab1565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060ff8a828151811061054f5761054f610ab1565b602002602001015160ff161061056457600080fd5b89818151811061057657610576610ab1565b60200260200101805180919061058b90610ac7565b60ff16905250600191506105ac565b806105a481610a96565b91505061048e565b5080156105bc57506106dd915050565b818b89815181106105cf576105cf610ab1565b60209081029190910101516001600160a01b03909116905260028a015461ffff1667ffffffffffffffff81111561060857610608610a6a565b604051908082528060200260200182016040528015610631578160200160208202803683370190505b508b898151811061064457610644610ab1565b602002602001015160200181905250828b898151811061066657610666610ab1565b60200260200101516020015160008151811061068457610684610ab1565b60200260200101906001600160e01b03191690816001600160e01b0319168152505060018989815181106106ba576106ba610ab1565b60ff90921660209283029190910190910152876106d681610a96565b9850505050505b806106e781610a96565b915050610439565b505080806106fc90610a96565b915050610416565b5060005b8281101561076b57600084828151811061072457610724610ab1565b602002602001015160ff169050600087838151811061074557610745610ab1565b60200260200101516020015190508181525050808061076390610a96565b915050610708565b508185525050505090565b7fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131e54606090600080516020610ae88339815191529060009061ffff1667ffffffffffffffff8111156107ca576107ca610a6a565b6040519080825280602002602001820160405280156107f3578160200160208202803683370190505b5092506000805b600284015461ffff168210156108e4576000818152600185016020526040812054905b60088110156108cf578361083081610a96565b600288015490955061ffff16851115905061084a576108cf565b600581901b82901b6001600160e01b0319811660009081526020889052604090205460601c6001600160a01b038a168114156108ba578189888151811061089357610893610ab1565b6001600160e01b031990921660209283029190910190910152866108b681610a96565b9750505b505080806108c790610a96565b91505061081d565b505080806108dc90610a96565b9150506107fa565b5050825250919050565b60006020828403121561090057600080fd5b81356001600160e01b03198116811461091857600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b818110156109605783516001600160a01b03168352928401929184019160010161093b565b50909695505050505050565b600081518084526020808501945080840160005b838110156109a65781516001600160e01b03191687529582019590820190600101610980565b509495945050505050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015610a2057888303603f19018552815180516001600160a01b03168452870151878401879052610a0d8785018261096c565b95880195935050908601906001016109d8565b509098975050505050505050565b600060208284031215610a4057600080fd5b81356001600160a01b038116811461091857600080fd5b602081526000610918602083018461096c565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610aaa57610aaa610a80565b5060010190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff811415610ade57610ade610a80565b6001019291505056fec8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131ca264697066735822122048d8d9af93417243f6592554a543c3e06f53b0be1e6054ac625cb5f375a6c55964736f6c63430008090033";

export class DiamondLoupeFacet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DiamondLoupeFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondLoupeFacet>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DiamondLoupeFacet {
    return super.attach(address) as DiamondLoupeFacet;
  }
  connect(signer: Signer): DiamondLoupeFacet__factory {
    return super.connect(signer) as DiamondLoupeFacet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondLoupeFacetInterface {
    return new utils.Interface(_abi) as DiamondLoupeFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondLoupeFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondLoupeFacet;
  }
}
