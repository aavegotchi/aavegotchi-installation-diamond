/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface InstallationFacetInterface extends ethers.utils.Interface {
  functions: {
    "addInstallationTypes(tuple[])": FunctionFragment;
    "balanceOf(address,uint256)": FunctionFragment;
    "balanceOfBatch(address[],uint256[])": FunctionFragment;
    "balanceOfToken(address,uint256,uint256)": FunctionFragment;
    "claimInstallations(uint256[])": FunctionFragment;
    "craftInstallations(uint256[])": FunctionFragment;
    "getAlchemicaAddresses()": FunctionFragment;
    "getInstallationType(uint256)": FunctionFragment;
    "getInstallationTypes(uint256[])": FunctionFragment;
    "installationBalancesOfToken(address,uint256)": FunctionFragment;
    "installationBalancesOfTokenWithTypes(address,uint256)": FunctionFragment;
    "installationsBalances(address)": FunctionFragment;
    "installationsBalancesWithTypes(address)": FunctionFragment;
    "setAlchemicaAddresses(address[])": FunctionFragment;
    "setBaseURI(string)": FunctionFragment;
    "uri(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addInstallationTypes",
    values: [
      {
        installationType: BigNumberish;
        level: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
        alchemicaType: BigNumberish;
        alchemicaCost: BigNumberish[];
        installationsVars: BigNumberish[];
        craftTime: BigNumberish;
      }[]
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOf",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfBatch",
    values: [string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "balanceOfToken",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "claimInstallations",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "craftInstallations",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getAlchemicaAddresses",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getInstallationType",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getInstallationTypes",
    values: [BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "installationBalancesOfToken",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "installationBalancesOfTokenWithTypes",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "installationsBalances",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "installationsBalancesWithTypes",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setAlchemicaAddresses",
    values: [string[]]
  ): string;
  encodeFunctionData(functionFragment: "setBaseURI", values: [string]): string;
  encodeFunctionData(functionFragment: "uri", values: [BigNumberish]): string;

  decodeFunctionResult(
    functionFragment: "addInstallationTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "balanceOfToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "claimInstallations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "craftInstallations",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAlchemicaAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInstallationType",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getInstallationTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installationBalancesOfToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installationBalancesOfTokenWithTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installationsBalances",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "installationsBalancesWithTypes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setAlchemicaAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setBaseURI", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "uri", data: BytesLike): Result;

  events: {
    "TransferToParent(address,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "TransferToParent"): EventFragment;
}

export type TransferToParentEvent = TypedEvent<
  [string, BigNumber, BigNumber, BigNumber] & {
    _toContract: string;
    _toTokenId: BigNumber;
    _tokenTypeId: BigNumber;
    _value: BigNumber;
  }
>;

export class InstallationFacet extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: InstallationFacetInterface;

  functions: {
    addInstallationTypes(
      _installationTypes: {
        installationType: BigNumberish;
        level: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
        alchemicaType: BigNumberish;
        alchemicaCost: BigNumberish[];
        installationsVars: BigNumberish[];
        craftTime: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { bal_: BigNumber }>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { bals: BigNumber[] }>;

    balanceOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { value: BigNumber }>;

    claimInstallations(
      _installationIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    craftInstallations(
      _installationTypes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    getAlchemicaAddresses(overrides?: CallOverrides): Promise<[string[]]>;

    getInstallationType(
      _installationTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        }
      ] & {
        installationType: [
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        };
      }
    >;

    getInstallationTypes(
      _installationTypeIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        })[]
      ] & {
        installationTypes_: ([
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        })[];
      }
    >;

    installationBalancesOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, BigNumber] & {
          installationId: BigNumber;
          balance: BigNumber;
        })[]
      ] & {
        bals_: ([BigNumber, BigNumber] & {
          installationId: BigNumber;
          balance: BigNumber;
        })[];
      }
    >;

    installationBalancesOfTokenWithTypes(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          BigNumber,
          [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          installationType: [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          };
        })[]
      ] & {
        installationBalancesOfTokenWithTypes_: ([
          BigNumber,
          BigNumber,
          [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          installationType: [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          };
        })[];
      }
    >;

    installationsBalances(
      _account: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([BigNumber, BigNumber] & {
          installationId: BigNumber;
          balance: BigNumber;
        })[]
      ] & {
        bals_: ([BigNumber, BigNumber] & {
          installationId: BigNumber;
          balance: BigNumber;
        })[];
      }
    >;

    installationsBalancesWithTypes(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([
          BigNumber,
          BigNumber,
          [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          installationType: [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          };
        })[]
      ] & {
        output_: ([
          BigNumber,
          BigNumber,
          [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          }
        ] & {
          balance: BigNumber;
          itemId: BigNumber;
          installationType: [
            number,
            number,
            BigNumber,
            BigNumber,
            number,
            BigNumber[],
            BigNumber[],
            BigNumber
          ] & {
            installationType: number;
            level: number;
            width: BigNumber;
            height: BigNumber;
            alchemicaType: number;
            alchemicaCost: BigNumber[];
            installationsVars: BigNumber[];
            craftTime: BigNumber;
          };
        })[];
      }
    >;

    setAlchemicaAddresses(
      _addresses: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setBaseURI(
      _value: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<[string]>;
  };

  addInstallationTypes(
    _installationTypes: {
      installationType: BigNumberish;
      level: BigNumberish;
      width: BigNumberish;
      height: BigNumberish;
      alchemicaType: BigNumberish;
      alchemicaCost: BigNumberish[];
      installationsVars: BigNumberish[];
      craftTime: BigNumberish;
    }[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  balanceOf(
    _owner: string,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  balanceOfBatch(
    _owners: string[],
    _ids: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  balanceOfToken(
    _tokenContract: string,
    _tokenId: BigNumberish,
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  claimInstallations(
    _installationIds: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  craftInstallations(
    _installationTypes: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  getAlchemicaAddresses(overrides?: CallOverrides): Promise<string[]>;

  getInstallationType(
    _installationTypeId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      number,
      number,
      BigNumber,
      BigNumber,
      number,
      BigNumber[],
      BigNumber[],
      BigNumber
    ] & {
      installationType: number;
      level: number;
      width: BigNumber;
      height: BigNumber;
      alchemicaType: number;
      alchemicaCost: BigNumber[];
      installationsVars: BigNumber[];
      craftTime: BigNumber;
    }
  >;

  getInstallationTypes(
    _installationTypeIds: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    ([
      number,
      number,
      BigNumber,
      BigNumber,
      number,
      BigNumber[],
      BigNumber[],
      BigNumber
    ] & {
      installationType: number;
      level: number;
      width: BigNumber;
      height: BigNumber;
      alchemicaType: number;
      alchemicaCost: BigNumber[];
      installationsVars: BigNumber[];
      craftTime: BigNumber;
    })[]
  >;

  installationBalancesOfToken(
    _tokenContract: string,
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, BigNumber] & {
      installationId: BigNumber;
      balance: BigNumber;
    })[]
  >;

  installationBalancesOfTokenWithTypes(
    _tokenContract: string,
    _tokenId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      BigNumber,
      [
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber[],
        BigNumber[],
        BigNumber
      ] & {
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        alchemicaCost: BigNumber[];
        installationsVars: BigNumber[];
        craftTime: BigNumber;
      }
    ] & {
      balance: BigNumber;
      itemId: BigNumber;
      installationType: [
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber[],
        BigNumber[],
        BigNumber
      ] & {
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        alchemicaCost: BigNumber[];
        installationsVars: BigNumber[];
        craftTime: BigNumber;
      };
    })[]
  >;

  installationsBalances(
    _account: string,
    overrides?: CallOverrides
  ): Promise<
    ([BigNumber, BigNumber] & {
      installationId: BigNumber;
      balance: BigNumber;
    })[]
  >;

  installationsBalancesWithTypes(
    _owner: string,
    overrides?: CallOverrides
  ): Promise<
    ([
      BigNumber,
      BigNumber,
      [
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber[],
        BigNumber[],
        BigNumber
      ] & {
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        alchemicaCost: BigNumber[];
        installationsVars: BigNumber[];
        craftTime: BigNumber;
      }
    ] & {
      balance: BigNumber;
      itemId: BigNumber;
      installationType: [
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber[],
        BigNumber[],
        BigNumber
      ] & {
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        alchemicaCost: BigNumber[];
        installationsVars: BigNumber[];
        craftTime: BigNumber;
      };
    })[]
  >;

  setAlchemicaAddresses(
    _addresses: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setBaseURI(
    _value: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;

  callStatic: {
    addInstallationTypes(
      _installationTypes: {
        installationType: BigNumberish;
        level: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
        alchemicaType: BigNumberish;
        alchemicaCost: BigNumberish[];
        installationsVars: BigNumberish[];
        craftTime: BigNumberish;
      }[],
      overrides?: CallOverrides
    ): Promise<void>;

    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    balanceOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    claimInstallations(
      _installationIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    craftInstallations(
      _installationTypes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    getAlchemicaAddresses(overrides?: CallOverrides): Promise<string[]>;

    getInstallationType(
      _installationTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber[],
        BigNumber[],
        BigNumber
      ] & {
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        alchemicaCost: BigNumber[];
        installationsVars: BigNumber[];
        craftTime: BigNumber;
      }
    >;

    getInstallationTypes(
      _installationTypeIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      ([
        number,
        number,
        BigNumber,
        BigNumber,
        number,
        BigNumber[],
        BigNumber[],
        BigNumber
      ] & {
        installationType: number;
        level: number;
        width: BigNumber;
        height: BigNumber;
        alchemicaType: number;
        alchemicaCost: BigNumber[];
        installationsVars: BigNumber[];
        craftTime: BigNumber;
      })[]
    >;

    installationBalancesOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, BigNumber] & {
        installationId: BigNumber;
        balance: BigNumber;
      })[]
    >;

    installationBalancesOfTokenWithTypes(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        BigNumber,
        [
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        }
      ] & {
        balance: BigNumber;
        itemId: BigNumber;
        installationType: [
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        };
      })[]
    >;

    installationsBalances(
      _account: string,
      overrides?: CallOverrides
    ): Promise<
      ([BigNumber, BigNumber] & {
        installationId: BigNumber;
        balance: BigNumber;
      })[]
    >;

    installationsBalancesWithTypes(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<
      ([
        BigNumber,
        BigNumber,
        [
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        }
      ] & {
        balance: BigNumber;
        itemId: BigNumber;
        installationType: [
          number,
          number,
          BigNumber,
          BigNumber,
          number,
          BigNumber[],
          BigNumber[],
          BigNumber
        ] & {
          installationType: number;
          level: number;
          width: BigNumber;
          height: BigNumber;
          alchemicaType: number;
          alchemicaCost: BigNumber[];
          installationsVars: BigNumber[];
          craftTime: BigNumber;
        };
      })[]
    >;

    setAlchemicaAddresses(
      _addresses: string[],
      overrides?: CallOverrides
    ): Promise<void>;

    setBaseURI(_value: string, overrides?: CallOverrides): Promise<void>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>;
  };

  filters: {
    "TransferToParent(address,uint256,uint256,uint256)"(
      _toContract?: string | null,
      _toTokenId?: BigNumberish | null,
      _tokenTypeId?: BigNumberish | null,
      _value?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        _toContract: string;
        _toTokenId: BigNumber;
        _tokenTypeId: BigNumber;
        _value: BigNumber;
      }
    >;

    TransferToParent(
      _toContract?: string | null,
      _toTokenId?: BigNumberish | null,
      _tokenTypeId?: BigNumberish | null,
      _value?: null
    ): TypedEventFilter<
      [string, BigNumber, BigNumber, BigNumber],
      {
        _toContract: string;
        _toTokenId: BigNumber;
        _tokenTypeId: BigNumber;
        _value: BigNumber;
      }
    >;
  };

  estimateGas: {
    addInstallationTypes(
      _installationTypes: {
        installationType: BigNumberish;
        level: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
        alchemicaType: BigNumberish;
        alchemicaCost: BigNumberish[];
        installationsVars: BigNumberish[];
        craftTime: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    balanceOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    claimInstallations(
      _installationIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    craftInstallations(
      _installationTypes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    getAlchemicaAddresses(overrides?: CallOverrides): Promise<BigNumber>;

    getInstallationType(
      _installationTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getInstallationTypes(
      _installationTypeIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    installationBalancesOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    installationBalancesOfTokenWithTypes(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    installationsBalances(
      _account: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    installationsBalancesWithTypes(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setAlchemicaAddresses(
      _addresses: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setBaseURI(
      _value: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    addInstallationTypes(
      _installationTypes: {
        installationType: BigNumberish;
        level: BigNumberish;
        width: BigNumberish;
        height: BigNumberish;
        alchemicaType: BigNumberish;
        alchemicaCost: BigNumberish[];
        installationsVars: BigNumberish[];
        craftTime: BigNumberish;
      }[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    balanceOf(
      _owner: string,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balanceOfBatch(
      _owners: string[],
      _ids: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    balanceOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    claimInstallations(
      _installationIds: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    craftInstallations(
      _installationTypes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    getAlchemicaAddresses(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getInstallationType(
      _installationTypeId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getInstallationTypes(
      _installationTypeIds: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    installationBalancesOfToken(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    installationBalancesOfTokenWithTypes(
      _tokenContract: string,
      _tokenId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    installationsBalances(
      _account: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    installationsBalancesWithTypes(
      _owner: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setAlchemicaAddresses(
      _addresses: string[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setBaseURI(
      _value: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    uri(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
